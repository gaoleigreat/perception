<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lego.equipment.service.mapper.EquipmentStopReasonMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.lego.framework.equipment.model.entity.EquipmentStopReason" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="equipmentId" column="equipment_id"/>
        <result property="equipmentCode" column="equipment_code"/>
        <result property="malfunctionDate" column="malfunction_date"/>
        <result property="totalHours" column="total_hours"/>
        <result property="malfunctionPhenomenon" column="malfunction_phenomenon"/>
        <result property="malfunctionReason" column="malfunction_reason"/>
        <result property="handleWay" column="handle_way"/>
        <result property="principal" column="principal"/>
        <result property="principalPhone" column="principal_phone"/>
        <result property="creationDate" column="creation_date"/>
        <result property="createdBy" column="created_by"/>
    </resultMap>

    <!--
          选择性插入
        -->
    <sql id="Base_Insert_Selective">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="equipmentId != null">
                equipment_id,
            </if>
            <if test="equipmentCode != null">
                equipment_code,
            </if>
            <if test="malfunctionDate != null">
                malfunction_date,
            </if>
            <if test="totalHours != null">
                total_hours,
            </if>
            <if test="malfunctionPhenomenon != null">
                malfunction_phenomenon,
            </if>
            <if test="malfunctionReason != null">
                malfunction_reason,
            </if>
            <if test="handleWay != null">
                handle_way,
            </if>
            <if test="principal != null">
                principal,
            </if>
            <if test="principalPhone != null">
                principal_phone,
            </if>
            <if test="creationDate != null">
                creation_date,
            </if>
            <if test="createdBy != null">
                created_by
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="equipmentId != null">
                #{equipmentId,jdbcType=BIGINT},
            </if>
            <if test="equipmentCode != null">
                #{equipmentCode,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionDate != null">
                #{malfunctionDate,jdbcType=TIMESTAMP},
            </if>
            <if test="totalHours != null">
                #{totalHours,jdbcType=DECIMAL},
            </if>
            <if test="malfunctionPhenomenon != null">
                #{malfunctionPhenomenon,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionReason != null">
                #{malfunctionReason,jdbcType=VARCHAR},
            </if>
            <if test="handleWay != null">
                #{handleWay,jdbcType=VARCHAR},
            </if>
            <if test="principal != null">
                #{principal,jdbcType=VARCHAR},
            </if>
            <if test="principalPhone != null">
                #{principalPhone,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--
      数据库表的基本查询列名集合
    -->
    <sql id="Base_Column_List">
        id, equipment_id, equipment_code, malfunction_date, total_hours, malfunction_phenomenon, malfunction_reason,
        handle_way, principal, principal_phone, creation_date, created_by
    </sql>

    <!--
        Where子句
      -->
    <sql id="Base_Query_Where">
        <if test="id != null">
            and id = #{id,jdbcType=BIGINT}
        </if>
        <if test="equipmentId != null">
            and equipment_id = #{equipmentId,jdbcType=BIGINT}
        </if>
        <if test="equipmentCode != null">
            and equipment_code = #{equipmentCode,jdbcType=VARCHAR}
        </if>
        <if test="malfunctionDate != null">
            and malfunction_date = #{malfunctionDate,jdbcType=TIMESTAMP}
        </if>
        <if test="totalHours != null">
            and total_hours = #{totalHours,jdbcType=DECIMAL}
        </if>
        <if test="malfunctionPhenomenon != null">
            and malfunction_phenomenon = #{malfunctionPhenomenon,jdbcType=VARCHAR}
        </if>
        <if test="malfunctionReason != null">
            and malfunction_reason = #{malfunctionReason,jdbcType=VARCHAR}
        </if>
        <if test="handleWay != null">
            and handle_way = #{handleWay,jdbcType=VARCHAR}
        </if>
        <if test="principal != null">
            and principal = #{principal,jdbcType=VARCHAR}
        </if>
        <if test="principalPhone != null">
            and principal_phone = #{principalPhone,jdbcType=VARCHAR}
        </if>
        <if test="creationDate != null">
            and creation_date = #{creationDate,jdbcType=TIMESTAMP}
        </if>
        <if test="createdBy != null">
            and created_by = #{createdBy,jdbcType=BIGINT}
        </if>
    </sql>

    <!--
        基本更新字段
    -->
    <sql id="Base_Update_Column">
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="equipmentId != null">
                equipment_id = #{equipmentId,jdbcType=BIGINT},
            </if>
            <if test="equipmentCode != null">
                equipment_code = #{equipmentCode,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionDate != null">
                malfunction_date = #{malfunctionDate,jdbcType=TIMESTAMP},
            </if>
            <if test="totalHours != null">
                total_hours = #{totalHours,jdbcType=DECIMAL},
            </if>
            <if test="malfunctionPhenomenon != null">
                malfunction_phenomenon = #{malfunctionPhenomenon,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionReason != null">
                malfunction_reason = #{malfunctionReason,jdbcType=VARCHAR},
            </if>
            <if test="handleWay != null">
                handle_way = #{handleWay,jdbcType=VARCHAR},
            </if>
            <if test="principal != null">
                principal = #{principal,jdbcType=VARCHAR},
            </if>
            <if test="principalPhone != null">
                principal_phone = #{principalPhone,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=BIGINT}
            </if>
        </set>
    </sql>

    <!--
        分页查询数据库表
      -->
    <select id="selectPaged" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tpl_equipment_stop_reason
    </select>

    <!--
      根据主键查询数据库表
    -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tpl_equipment_stop_reason
        where id = #{id,jdbcType=BIGINT}
    </select>


    <!--
      根据主键删除数据库表中的记录
    -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete FROM tpl_equipment_stop_reason
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <!--
      添加一条记录到数据库表中
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        insert into tpl_equipment_stop_reason
        (<include refid="Base_Column_List"/>)
        values (
        <if test="id != null">
            #{id,jdbcType=BIGINT},
        </if>
        <if test="equipmentId != null">
            #{equipmentId,jdbcType=BIGINT},
        </if>
        <if test="equipmentCode != null">
            #{equipmentCode,jdbcType=VARCHAR},
        </if>
        <if test="malfunctionDate != null">
            #{malfunctionDate,jdbcType=TIMESTAMP},
        </if>
        <if test="totalHours != null">
            #{totalHours,jdbcType=DECIMAL},
        </if>
        <if test="malfunctionPhenomenon != null">
            #{malfunctionPhenomenon,jdbcType=VARCHAR},
        </if>
        <if test="malfunctionReason != null">
            #{malfunctionReason,jdbcType=VARCHAR},
        </if>
        <if test="handleWay != null">
            #{handleWay,jdbcType=VARCHAR},
        </if>
        <if test="principal != null">
            #{principal,jdbcType=VARCHAR},
        </if>
        <if test="principalPhone != null">
            #{principalPhone,jdbcType=VARCHAR},
        </if>
        <if test="creationDate != null">
            #{creationDate,jdbcType=TIMESTAMP},
        </if>
        <if test="createdBy != null">
            #{createdBy,jdbcType=BIGINT}
        </if>
        )
    </insert>

    <!--
     有选择的添加一条记录到数据库表中
   -->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        insert into tpl_equipment_stop_reason
        <include refid="Base_Insert_Selective"/>
    </insert>

    <!--
      有选择的可忽略添加一条记录到数据库表中
    -->
    <insert id="insertSelectiveIgnore" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        insert ignore into tpl_equipment_stop_reason
        <include refid="Base_Insert_Selective"/>
    </insert>

    <!--
      根据主键有选择的更新数据库表
    -->
    <update id="updateByPrimaryKeySelective" parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        update tpl_equipment_stop_reason
        <include refid="Base_Update_Column"></include>
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!--
      根据主键更新数据库表
    -->
    <update id="updateByPrimaryKey" parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        update tpl_equipment_stop_reason
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="equipmentId != null">
                equipment_id = #{equipmentId,jdbcType=BIGINT},
            </if>
            <if test="equipmentCode != null">
                equipment_code = #{equipmentCode,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionDate != null">
                malfunction_date = #{malfunctionDate,jdbcType=TIMESTAMP},
            </if>
            <if test="totalHours != null">
                total_hours = #{totalHours,jdbcType=DECIMAL},
            </if>
            <if test="malfunctionPhenomenon != null">
                malfunction_phenomenon = #{malfunctionPhenomenon,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionReason != null">
                malfunction_reason = #{malfunctionReason,jdbcType=VARCHAR},
            </if>
            <if test="handleWay != null">
                handle_way = #{handleWay,jdbcType=VARCHAR},
            </if>
            <if test="principal != null">
                principal = #{principal,jdbcType=VARCHAR},
            </if>
            <if test="principalPhone != null">
                principal_phone = #{principalPhone,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=BIGINT}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--
      批量添加记录到数据库表中
    -->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into tpl_equipment_stop_reason
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, equipment_id, equipment_code, malfunction_date, total_hours, malfunction_phenomenon, malfunction_reason,
            handle_way, principal, principal_phone, creation_date, created_by
        </trim>
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id,jdbcType=BIGINT}, #{item.equipmentId,jdbcType=BIGINT}, #{item.equipmentCode,jdbcType=VARCHAR},
                #{item.malfunctionDate,jdbcType=TIMESTAMP}, #{item.totalHours,jdbcType=DECIMAL},
                #{item.malfunctionPhenomenon,jdbcType=VARCHAR}, #{item.malfunctionReason,jdbcType=VARCHAR},
                #{item.handleWay,jdbcType=VARCHAR}, #{item.principal,jdbcType=VARCHAR},
                #{item.principalPhone,jdbcType=VARCHAR}, #{item.creationDate,jdbcType=TIMESTAMP},
                #{item.createdBy,jdbcType=BIGINT}
            </trim>
        </foreach>
    </insert>

    <!--
      根据主键批量更新数据库表中的记录
    -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update tpl_equipment_stop_reason
            <set>
                <trim suffixOverrides=",">
                    <if test="item.id != null">
                        id = #{item.id,jdbcType=BIGINT},
                    </if>
                    <if test="item.equipmentId != null">
                        equipment_id = #{item.equipmentId,jdbcType=BIGINT},
                    </if>
                    <if test="item.equipmentCode != null">
                        equipment_code = #{item.equipmentCode,jdbcType=VARCHAR},
                    </if>
                    <if test="item.malfunctionDate != null">
                        malfunction_date = #{item.malfunctionDate,jdbcType=TIMESTAMP},
                    </if>
                    <if test="item.totalHours != null">
                        total_hours = #{item.totalHours,jdbcType=DECIMAL},
                    </if>
                    <if test="item.malfunctionPhenomenon != null">
                        malfunction_phenomenon = #{item.malfunctionPhenomenon,jdbcType=VARCHAR},
                    </if>
                    <if test="item.malfunctionReason != null">
                        malfunction_reason = #{item.malfunctionReason,jdbcType=VARCHAR},
                    </if>
                    <if test="item.handleWay != null">
                        handle_way = #{item.handleWay,jdbcType=VARCHAR},
                    </if>
                    <if test="item.principal != null">
                        principal = #{item.principal,jdbcType=VARCHAR},
                    </if>
                    <if test="item.principalPhone != null">
                        principal_phone = #{item.principalPhone,jdbcType=VARCHAR},
                    </if>
                    <if test="item.creationDate != null">
                        creation_date = #{item.creationDate,jdbcType=TIMESTAMP},
                    </if>
                    <if test="item.createdBy != null">
                        created_by = #{item.createdBy,jdbcType=BIGINT}
                    </if>
                </trim>
            </set>
            <where>
                <trim suffixOverrides=",">
                    where id = #{item.id,jdbcType=BIGINT}
                </trim>
            </where>
        </foreach>
    </update>

    <!--
     使用给定的字段名定义Where子句
   -->
    <sql id="Identifiers_Array_Conditions">
        <foreach collection="array" index="index" item="item" separator=" and ">
            <if test="item == 'id'">
                id = #{id,jdbcType=BIGINT}
            </if>
            <if test="item == 'equipmentId'">
                equipment_id = #{equipmentId,jdbcType=BIGINT}
            </if>
            <if test="item == 'equipmentCode'">
                equipment_code = #{equipmentCode,jdbcType=VARCHAR}
            </if>
            <if test="item == 'malfunctionDate'">
                malfunction_date = #{malfunctionDate,jdbcType=TIMESTAMP}
            </if>
            <if test="item == 'totalHours'">
                total_hours = #{totalHours,jdbcType=DECIMAL}
            </if>
            <if test="item == 'malfunctionPhenomenon'">
                malfunction_phenomenon = #{malfunctionPhenomenon,jdbcType=VARCHAR}
            </if>
            <if test="item == 'malfunctionReason'">
                malfunction_reason = #{malfunctionReason,jdbcType=VARCHAR}
            </if>
            <if test="item == 'handleWay'">
                handle_way = #{handleWay,jdbcType=VARCHAR}
            </if>
            <if test="item == 'principal'">
                principal = #{principal,jdbcType=VARCHAR}
            </if>
            <if test="item == 'principalPhone'">
                principal_phone = #{principalPhone,jdbcType=VARCHAR}
            </if>
            <if test="item == 'creationDate'">
                creation_date = #{creationDate,jdbcType=TIMESTAMP}
            </if>
            <if test="item == 'createdBy'">
                created_by = #{createdBy,jdbcType=BIGINT}
            </if>
        </foreach>
    </sql>

    <!--
      存在即更新否则插入
    -->
    <update id="upsert" parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        insert into tpl_equipment_stop_reason
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, equipment_id, equipment_code, malfunction_date, total_hours, malfunction_phenomenon, malfunction_reason,
            handle_way, principal, principal_phone, creation_date, created_by
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT}, #{equipmentId,jdbcType=BIGINT}, #{equipmentCode,jdbcType=VARCHAR},
            #{malfunctionDate,jdbcType=TIMESTAMP}, #{totalHours,jdbcType=DECIMAL},
            #{malfunctionPhenomenon,jdbcType=VARCHAR}, #{malfunctionReason,jdbcType=VARCHAR},
            #{handleWay,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR}, #{principalPhone,jdbcType=VARCHAR},
            #{creationDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=BIGINT}
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            #{id,jdbcType=BIGINT}, #{equipmentId,jdbcType=BIGINT}, #{equipmentCode,jdbcType=VARCHAR},
            #{malfunctionDate,jdbcType=TIMESTAMP}, #{totalHours,jdbcType=DECIMAL},
            #{malfunctionPhenomenon,jdbcType=VARCHAR}, #{malfunctionReason,jdbcType=VARCHAR},
            #{handleWay,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR}, #{principalPhone,jdbcType=VARCHAR},
            #{creationDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=BIGINT}
        </trim>
    </update>


    <!--
      带有空值检查的存在即更新否则插入
    -->
    <update id="upsertSelective" parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        insert into tpl_equipment_stop_reason
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id !=null ">
                id,
            </if>
            <if test="equipmentId !=null ">
                equipment_id,
            </if>
            <if test="equipmentCode !=null ">
                equipment_code,
            </if>
            <if test="malfunctionDate !=null ">
                malfunction_date,
            </if>
            <if test="totalHours !=null ">
                total_hours,
            </if>
            <if test="malfunctionPhenomenon !=null ">
                malfunction_phenomenon,
            </if>
            <if test="malfunctionReason !=null ">
                malfunction_reason,
            </if>
            <if test="handleWay !=null ">
                handle_way,
            </if>
            <if test="principal !=null ">
                principal,
            </if>
            <if test="principalPhone !=null ">
                principal_phone,
            </if>
            <if test="creationDate !=null ">
                creation_date,
            </if>
            <if test="createdBy !=null ">
                created_by
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id !=null ">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="equipmentId !=null ">
                equipment_id = #{equipmentId,jdbcType=BIGINT},
            </if>
            <if test="equipmentCode !=null ">
                equipment_code = #{equipmentCode,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionDate !=null ">
                malfunction_date = #{malfunctionDate,jdbcType=TIMESTAMP},
            </if>
            <if test="totalHours !=null ">
                total_hours = #{totalHours,jdbcType=DECIMAL},
            </if>
            <if test="malfunctionPhenomenon !=null ">
                malfunction_phenomenon = #{malfunctionPhenomenon,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionReason !=null ">
                malfunction_reason = #{malfunctionReason,jdbcType=VARCHAR},
            </if>
            <if test="handleWay !=null ">
                handle_way = #{handleWay,jdbcType=VARCHAR},
            </if>
            <if test="principal !=null ">
                principal = #{principal,jdbcType=VARCHAR},
            </if>
            <if test="principalPhone !=null ">
                principal_phone = #{principalPhone,jdbcType=VARCHAR},
            </if>
            <if test="creationDate !=null ">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy !=null ">
                created_by = #{createdBy,jdbcType=BIGINT}
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id !=null ">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="equipmentId !=null ">
                equipment_id = #{equipmentId,jdbcType=BIGINT},
            </if>
            <if test="equipmentCode !=null ">
                equipment_code = #{equipmentCode,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionDate !=null ">
                malfunction_date = #{malfunctionDate,jdbcType=TIMESTAMP},
            </if>
            <if test="totalHours !=null ">
                total_hours = #{totalHours,jdbcType=DECIMAL},
            </if>
            <if test="malfunctionPhenomenon !=null ">
                malfunction_phenomenon = #{malfunctionPhenomenon,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionReason !=null ">
                malfunction_reason = #{malfunctionReason,jdbcType=VARCHAR},
            </if>
            <if test="handleWay !=null ">
                handle_way = #{handleWay,jdbcType=VARCHAR},
            </if>
            <if test="principal !=null ">
                principal = #{principal,jdbcType=VARCHAR},
            </if>
            <if test="principalPhone !=null ">
                principal_phone = #{principalPhone,jdbcType=VARCHAR},
            </if>
            <if test="creationDate !=null ">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy !=null ">
                created_by = #{createdBy,jdbcType=BIGINT}
            </if>
        </trim>
    </update>

    <select id="query" resultMap="BaseResultMap" parameterType="com.lego.framework.equipment.model.entity.EquipmentStopReason">
        select
        <include refid="Base_Column_List"/>
        from tpl_equipment_stop_reason
        <where>
            <include refid="Base_Query_Where"></include>
        </where>
    </select>

    <select id="queryTotal" resultType="long">
        select count(*) from tpl_equipment_stop_reason
    </select>


    <delete id="deleteBatch">
        delete from tpl_equipment_stop_reason where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>